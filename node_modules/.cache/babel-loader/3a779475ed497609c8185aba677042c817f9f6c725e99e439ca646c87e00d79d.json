{"ast":null,"code":"const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst USERS = \"USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 22,\n  currentPage: 3,\n  isFetching: true\n};\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {\n              ...u,\n              followed: true\n            };\n          }\n          return u;\n        })\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {\n              ...u,\n              followed: false\n            };\n          }\n          return u;\n        })\n      };\n    case USERS:\n      return {\n        ...state,\n        users: [...action.users]\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    case SET_TOTAL_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalCount\n      };\n    default:\n      return state;\n  }\n};\nexport const followAC = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unFollowAC = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsersAC = users => {\n  return {\n    type: USERS,\n    users\n  };\n};\nexport const setCurrentPageAC = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport const setTotalUsersCountAC = totalCount => {\n  return {\n    type: SET_TOTAL_COUNT,\n    totalCount\n  };\n};\nexport default usersReducer;","map":{"version":3,"names":["FOLLOW","UNFOLLOW","USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","totalCount","followAC","unFollowAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC"],"sources":["/Users/uvixmi/social-network/src/redux/users_reducer.js"],"sourcesContent":["const FOLLOW = \"FOLLOW\"\nconst UNFOLLOW = \"UNFOLLOW\"\nconst USERS = \"USERS\"\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\"\n\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 22,\n  currentPage: 3,\n  isFetching: true,\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, followed: true }\n          }\n          return u\n        }),\n      }\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, followed: false }\n          }\n          return u\n        }),\n      }\n    case USERS:\n      return {\n        ...state,\n        users: [...action.users],\n      }\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      }\n    case SET_TOTAL_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalCount,\n      }\n    default:\n      return state\n  }\n}\nexport const followAC = (userId) => {\n  return {\n    type: FOLLOW,\n    userId,\n  }\n}\nexport const unFollowAC = (userId) => {\n  return {\n    type: UNFOLLOW,\n    userId,\n  }\n}\n\nexport const setUsersAC = (users) => {\n  return {\n    type: USERS,\n    users,\n  }\n}\nexport const setCurrentPageAC = (currentPage) => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage,\n  }\n}\nexport const setTotalUsersCountAC = (totalCount) => {\n  return {\n    type: SET_TOTAL_COUNT,\n    totalCount,\n  }\n}\nexport default usersReducer\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAQ;AACvB,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,KAAK,GAAG,OAAO;AACrB,MAAMC,gBAAgB,GAAG,kBAAkB;AAC3C,MAAMC,eAAe,GAAG,iBAAiB;AAEzC,IAAIC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,CAAC;EACXC,eAAe,EAAE,EAAE;EACnBC,WAAW,EAAE,CAAC;EACdC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGP,YAAY;EAAA,IAAEQ,MAAM;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,MAAM;MACT,OAAO;QACL,GAAGY,KAAK;QACRN,KAAK,EAAEM,KAAK,CAACN,KAAK,CAACS,GAAG,CAAEC,CAAC,IAAK;UAC5B,IAAIA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAACK,MAAM,EAAE;YAC1B,OAAO;cAAE,GAAGF,CAAC;cAAEG,QAAQ,EAAE;YAAK,CAAC;UACjC;UACA,OAAOH,CAAC;QACV,CAAC;MACH,CAAC;IAEH,KAAKf,QAAQ;MACX,OAAO;QACL,GAAGW,KAAK;QACRN,KAAK,EAAEM,KAAK,CAACN,KAAK,CAACS,GAAG,CAAEC,CAAC,IAAK;UAC5B,IAAIA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAACK,MAAM,EAAE;YAC1B,OAAO;cAAE,GAAGF,CAAC;cAAEG,QAAQ,EAAE;YAAM,CAAC;UAClC;UACA,OAAOH,CAAC;QACV,CAAC;MACH,CAAC;IACH,KAAKd,KAAK;MACR,OAAO;QACL,GAAGU,KAAK;QACRN,KAAK,EAAE,CAAC,GAAGO,MAAM,CAACP,KAAK;MACzB,CAAC;IACH,KAAKH,gBAAgB;MACnB,OAAO;QACL,GAAGS,KAAK;QACRH,WAAW,EAAEI,MAAM,CAACJ;MACtB,CAAC;IACH,KAAKL,eAAe;MAClB,OAAO;QACL,GAAGQ,KAAK;QACRJ,eAAe,EAAEK,MAAM,CAACO;MAC1B,CAAC;IACH;MACE,OAAOR,KAAK;EAAA;AAElB,CAAC;AACD,OAAO,MAAMS,QAAQ,GAAIH,MAAM,IAAK;EAClC,OAAO;IACLJ,IAAI,EAAEd,MAAM;IACZkB;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMI,UAAU,GAAIJ,MAAM,IAAK;EACpC,OAAO;IACLJ,IAAI,EAAEb,QAAQ;IACdiB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,UAAU,GAAIjB,KAAK,IAAK;EACnC,OAAO;IACLQ,IAAI,EAAEZ,KAAK;IACXI;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMkB,gBAAgB,GAAIf,WAAW,IAAK;EAC/C,OAAO;IACLK,IAAI,EAAEX,gBAAgB;IACtBM;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMgB,oBAAoB,GAAIL,UAAU,IAAK;EAClD,OAAO;IACLN,IAAI,EAAEV,eAAe;IACrBgB;EACF,CAAC;AACH,CAAC;AACD,eAAeT,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}