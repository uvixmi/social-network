{"ast":null,"code":"import { userAPI, profileAPI } from \"../api/api\";\nconst ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nlet initialState = {\n  posts: [{\n    message: \"Post 1\",\n    likescount: 2\n  }, {\n    message: \"Post 1\",\n    likescount: 4\n  }, {\n    message: \"Post 1\",\n    likescount: 37\n  }, {\n    message: \"Post 1\",\n    likescount: 21\n  }, {\n    message: \"Post 1\",\n    likescount: 22\n  }],\n  newPostText: \"NewPost\",\n  profile: null,\n  status: \"\"\n};\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 3423,\n          message: state.newPostText,\n          likescount: 0\n        };\n        return {\n          ...state,\n          posts: [...state.posts, newPost],\n          newPostText: \"\"\n        };\n      }\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return {\n          ...state,\n          newPostText: action.newText\n        };\n      }\n    case SET_USER_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    case SET_STATUS:\n      {\n        return {\n          ...state,\n          status: action.status\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getUserProfile = userId => {\n  return dispatch => {\n    userAPI.getProfile(userId).then(response => {\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\nexport const getStatus = userId => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(response => {\n      dispatch(setStatus(response.data));\n    });\n  };\n};\nexport const setStatus = status => ({\n  type: SET_USER_PROFILE,\n  status\n});\nexport const updateStatus = userId => {\n  return dispatch => {\n    profileAPI.setStatus(userId).then(response => {\n      if (response.data.resultCode === 0) dispatch(setStatus(response.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"names":["userAPI","profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","message","likescount","newPostText","profile","status","profileReducer","state","action","type","newPost","id","newText","addPostActionCreator","updateNewPostActionCreator","text","setUserProfile","getUserProfile","userId","dispatch","getProfile","then","response","data","getStatus","setStatus","updateStatus","resultCode"],"sources":["/Users/uvixmi/social-network/src/redux/profile_reducer.js"],"sourcesContent":["import { userAPI, profileAPI } from \"../api/api\"\n\nconst ADD_POST = \"ADD-POST\"\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\"\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\nconst SET_STATUS = \"SET_STATUS\"\nlet initialState = {\n  posts: [\n    { message: \"Post 1\", likescount: 2 },\n    { message: \"Post 1\", likescount: 4 },\n    { message: \"Post 1\", likescount: 37 },\n    { message: \"Post 1\", likescount: 21 },\n    { message: \"Post 1\", likescount: 22 },\n  ],\n  newPostText: \"NewPost\",\n  profile: null,\n  status: \"\",\n}\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost = {\n        id: 3423,\n        message: state.newPostText,\n        likescount: 0,\n      }\n\n      return { ...state, posts: [...state.posts, newPost], newPostText: \"\" }\n    }\n    case UPDATE_NEW_POST_TEXT: {\n      return { ...state, newPostText: action.newText }\n    }\n    case SET_USER_PROFILE: {\n      return { ...state, profile: action.profile }\n    }\n    case SET_STATUS: {\n      return { ...state, status: action.status }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST,\n  }\n}\n\nexport const updateNewPostActionCreator = (text) => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text,\n  }\n}\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\n\nexport const getUserProfile = (userId) => {\n  return (dispatch) => {\n    userAPI.getProfile(userId).then((response) => {\n      dispatch(setUserProfile(response.data))\n    })\n  }\n}\n\nexport const getStatus = (userId) => {\n  return (dispatch) => {\n    profileAPI.getStatus(userId).then((response) => {\n      dispatch(setStatus(response.data))\n    })\n  }\n}\n\nexport const setStatus = (status) => ({ type: SET_USER_PROFILE, status })\n\nexport const updateStatus = (userId) => {\n  return (dispatch) => {\n    profileAPI.setStatus(userId).then((response) => {\n      if (response.data.resultCode === 0) dispatch(setStatus(response.data))\n    })\n  }\n}\n\nexport default profileReducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}