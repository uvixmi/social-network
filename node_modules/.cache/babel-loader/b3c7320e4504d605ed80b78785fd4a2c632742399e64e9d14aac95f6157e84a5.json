{"ast":null,"code":"import { userAPI } from \"../api/api\";\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst USERS = \"USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 22,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {\n              ...u,\n              followed: true\n            };\n          }\n          return u;\n        })\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {\n              ...u,\n              followed: false\n            };\n          }\n          return u;\n        })\n      };\n    case USERS:\n      return {\n        ...state,\n        users: [...action.users]\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    case SET_TOTAL_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalCount\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n    default:\n      return state;\n  }\n};\nexport const followSuccess = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unfollowSuccess = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: USERS,\n    users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport const setTotalUsersCount = totalCount => {\n  return {\n    type: SET_TOTAL_COUNT,\n    totalCount\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport const toggleFollowingProgress = (isFetching, userId) => {\n  return {\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n  };\n};\nexport const getUsers = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    userAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"names":["userAPI","FOLLOW","UNFOLLOW","USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","totalCount","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","then","data","items"],"sources":["/Users/uvixmi/social-network/src/redux/users_reducer.js"],"sourcesContent":["import { userAPI } from \"../api/api\"\n\nconst FOLLOW = \"FOLLOW\"\nconst UNFOLLOW = \"UNFOLLOW\"\nconst USERS = \"USERS\"\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\"\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\n\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 22,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, followed: true }\n          }\n          return u\n        }),\n      }\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, followed: false }\n          }\n          return u\n        }),\n      }\n    case USERS:\n      return {\n        ...state,\n        users: [...action.users],\n      }\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      }\n    case SET_TOTAL_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalCount,\n      }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id != action.userId),\n      }\n    default:\n      return state\n  }\n}\nexport const followSuccess = (userId) => {\n  return {\n    type: FOLLOW,\n    userId,\n  }\n}\nexport const unfollowSuccess = (userId) => {\n  return {\n    type: UNFOLLOW,\n    userId,\n  }\n}\n\nexport const setUsers = (users) => {\n  return {\n    type: USERS,\n    users,\n  }\n}\nexport const setCurrentPage = (currentPage) => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage,\n  }\n}\nexport const setTotalUsersCount = (totalCount) => {\n  return {\n    type: SET_TOTAL_COUNT,\n    totalCount,\n  }\n}\nexport const toggleIsFetching = (isFetching) => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching,\n  }\n}\n\nexport const toggleFollowingProgress = (isFetching, userId) => {\n  return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId }\n}\n\nexport const getUsers = (currentPage, pageSize) => {\n  return (dispatch) => {\n    dispatch(toggleIsFetching(true))\n    userAPI.getUsers(currentPage, pageSize).then((data) => {\n      dispatch(toggleIsFetching(false))\n      dispatch(setUsers(data.items))\n      dispatch(setTotalUsersCount(data.totalCount))\n    })\n  }\n}\nexport default usersReducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}