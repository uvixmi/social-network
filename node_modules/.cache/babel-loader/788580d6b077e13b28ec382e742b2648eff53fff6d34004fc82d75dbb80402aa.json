{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        message: \"Post 1\",\n        likescount: 2\n      }, {\n        message: \"Post 1\",\n        likescount: 4\n      }, {\n        message: \"Post 1\",\n        likescount: 37\n      }, {\n        message: \"Post 1\",\n        likescount: 21\n      }, {\n        message: \"Post 1\",\n        likescount: 22\n      }],\n      newPostText: \"NewPost\"\n    },\n    messagesPage: {\n      messages: [{\n        message: \"Hello\"\n      }, {\n        message: \"How are you?\"\n      }, {\n        message: \"Damba loh\"\n      }],\n      dials: [{\n        id: 1,\n        name: \"Damba\"\n      }, {\n        id: 2,\n        name: \"Vadim\"\n      }, {\n        id: 3,\n        name: \"Odel\"\n      }, {\n        id: 4,\n        name: \"Ortem\"\n      }, {\n        id: 5,\n        name: \"Ya\"\n      }, {\n        id: 6,\n        name: \"Test\"\n      }],\n      newMessageBody: \"\"\n    },\n    sidebar: {}\n  },\n  getState() {\n    return this._state;\n  },\n  _callSubscriber() {\n    console.log(\"State changed\");\n  },\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 3423,\n        message: this._state.profilePage.newPostText,\n        likescount: 0\n      };\n      this._state.profilePage.posts.push(newPost);\n      this._state.profilePage.newPostText = \"\";\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.messagesPage.newMessageBody = action.body;\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.messages.newMessageBody;\n      this._state.messagesPage.newMessageBody = \"\";\n      this._state.messagesPage.messages.push({\n        id: 7,\n        message: body\n      });\n      this._callSubscriber(this._state);\n    }\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  }\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = message => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: message\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","message","likescount","newPostText","messagesPage","messages","dials","id","name","newMessageBody","sidebar","getState","_callSubscriber","console","log","dispatch","action","type","newPost","push","newText","body","subscribe","observer","addPostActionCreator","updateNewPostActionCreator","text","sendMessageCreator","updateNewMessageBodyCreator","window"],"sources":["/Users/uvixmi/social-network/src/redux/state.js"],"sourcesContent":["const ADD_POST = \"ADD-POST\"\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\"\n\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\"\nconst SEND_MESSAGE = \"SEND-MESSAGE\"\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [\n        { message: \"Post 1\", likescount: 2 },\n        { message: \"Post 1\", likescount: 4 },\n        { message: \"Post 1\", likescount: 37 },\n        { message: \"Post 1\", likescount: 21 },\n        { message: \"Post 1\", likescount: 22 },\n      ],\n      newPostText: \"NewPost\",\n    },\n    messagesPage: {\n      messages: [\n        { message: \"Hello\" },\n        { message: \"How are you?\" },\n        { message: \"Damba loh\" },\n      ],\n      dials: [\n        { id: 1, name: \"Damba\" },\n        { id: 2, name: \"Vadim\" },\n        { id: 3, name: \"Odel\" },\n        { id: 4, name: \"Ortem\" },\n        { id: 5, name: \"Ya\" },\n        { id: 6, name: \"Test\" },\n      ],\n      newMessageBody: \"\",\n    },\n    sidebar: {},\n  },\n  getState() {\n    return this._state\n  },\n  _callSubscriber() {\n    console.log(\"State changed\")\n  },\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 3423,\n        message: this._state.profilePage.newPostText,\n        likescount: 0,\n      }\n\n      this._state.profilePage.posts.push(newPost)\n      this._state.profilePage.newPostText = \"\"\n      this._callSubscriber(this._state)\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText\n      this._callSubscriber(this._state)\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.messagesPage.newMessageBody = action.body\n      this._callSubscriber(this._state)\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.messages.newMessageBody\n      this._state.messagesPage.newMessageBody = \"\"\n      this._state.messagesPage.messages.push({ id: 7, message: body })\n      this._callSubscriber(this._state)\n    }\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer\n  },\n}\n\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST,\n  }\n}\n\nexport const updateNewPostActionCreator = (text) => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text,\n  }\n}\n\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE })\nexport const updateNewMessageBodyCreator = (message) => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: message,\n  }\n}\n\nexport default store\nwindow.store = store\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}