{"ast":null,"code":"import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/api\";\nconst SET_USER_DATE = \"uvixmi-social/auth/SET_USER_DATE\";\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER_DATE:\n      return {\n        ...state,\n        ...action.data\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login, isAuth) => {\n  return {\n    type: SET_USER_DATE,\n    data: {\n      userId,\n      email,\n      login,\n      isAuth\n    }\n  };\n};\nexport const getAuthUserData = () => async dispatch => {\n  let response = await authAPI.me();\n  if (response.data.resultCode === 0) {\n    let {\n      id,\n      login,\n      email\n    } = response.data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    } else {\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n      dispatch(stopSubmit(\"login\", {\n        _error: message\n      }));\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setAuthUserData(null, null, null, false));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"names":["stopSubmit","authAPI","SET_USER_DATE","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","response","me","resultCode","id","password","rememberMe","then","message","messages","length","_error","logout"],"sources":["/Users/uvixmi/social-network/src/redux/auth-reducer.js"],"sourcesContent":["import { stopSubmit } from \"redux-form\"\nimport { authAPI } from \"../api/api\"\nconst SET_USER_DATE = \"uvixmi-social/auth/SET_USER_DATE\"\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATE:\n      return {\n        ...state,\n        ...action.data,\n      }\n    default:\n      return state\n  }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => {\n  return {\n    type: SET_USER_DATE,\n    data: { userId, email, login, isAuth },\n  }\n}\n\nexport const getAuthUserData = () => async (dispatch) => {\n  let response = await authAPI.me()\n\n  if (response.data.resultCode === 0) {\n    let { id, login, email } = response.data.data\n    dispatch(setAuthUserData(id, email, login, true))\n  }\n}\n\nexport const login = (email, password, rememberMe) => (dispatch) => {\n  authAPI.login(email, password, rememberMe).then((response) => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData())\n    } else {\n      let message =\n        response.data.messages.length > 0\n          ? response.data.messages[0]\n          : \"Some error\"\n      dispatch(stopSubmit(\"login\", { _error: message }))\n    }\n  })\n}\nexport const logout = () => (dispatch) => {\n  authAPI.logout().then((response) => {\n    if (response.data.resultCode === 0) {\n      dispatch(setAuthUserData(null, null, null, false))\n    }\n  })\n}\n\nexport default authReducer\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,YAAY;AACvC,SAASC,OAAO,QAAQ,YAAY;AACpC,MAAMC,aAAa,GAAG,kCAAkC;AAExD,IAAIC,YAAY,GAAG;EACjBC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,aAAa;MAChB,OAAO;QACL,GAAGO,KAAK;QACR,GAAGC,MAAM,CAACE;MACZ,CAAC;IACH;MACE,OAAOH,KAAK;EAAA;AAElB,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,MAAM,KAAK;EAC/D,OAAO;IACLI,IAAI,EAAET,aAAa;IACnBU,IAAI,EAAE;MAAER,MAAM;MAAEC,KAAK;MAAEC,KAAK;MAAEC;IAAO;EACvC,CAAC;AACH,CAAC;AAED,OAAO,MAAMO,eAAe,GAAG,MAAM,MAAOC,QAAQ,IAAK;EACvD,IAAIC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,EAAE,EAAE;EAEjC,IAAID,QAAQ,CAACJ,IAAI,CAACM,UAAU,KAAK,CAAC,EAAE;IAClC,IAAI;MAAEC,EAAE;MAAEb,KAAK;MAAED;IAAM,CAAC,GAAGW,QAAQ,CAACJ,IAAI,CAACA,IAAI;IAC7CG,QAAQ,CAACF,eAAe,CAACM,EAAE,EAAEd,KAAK,EAAEC,KAAK,EAAE,IAAI,CAAC,CAAC;EACnD;AACF,CAAC;AAED,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAK,EAAEe,QAAQ,EAAEC,UAAU,KAAMN,QAAQ,IAAK;EAClEd,OAAO,CAACK,KAAK,CAACD,KAAK,EAAEe,QAAQ,EAAEC,UAAU,CAAC,CAACC,IAAI,CAAEN,QAAQ,IAAK;IAC5D,IAAIA,QAAQ,CAACJ,IAAI,CAACM,UAAU,KAAK,CAAC,EAAE;MAClCH,QAAQ,CAACD,eAAe,EAAE,CAAC;IAC7B,CAAC,MAAM;MACL,IAAIS,OAAO,GACTP,QAAQ,CAACJ,IAAI,CAACY,QAAQ,CAACC,MAAM,GAAG,CAAC,GAC7BT,QAAQ,CAACJ,IAAI,CAACY,QAAQ,CAAC,CAAC,CAAC,GACzB,YAAY;MAClBT,QAAQ,CAACf,UAAU,CAAC,OAAO,EAAE;QAAE0B,MAAM,EAAEH;MAAQ,CAAC,CAAC,CAAC;IACpD;EACF,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMI,MAAM,GAAG,MAAOZ,QAAQ,IAAK;EACxCd,OAAO,CAAC0B,MAAM,EAAE,CAACL,IAAI,CAAEN,QAAQ,IAAK;IAClC,IAAIA,QAAQ,CAACJ,IAAI,CAACM,UAAU,KAAK,CAAC,EAAE;MAClCH,QAAQ,CAACF,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACpD;EACF,CAAC,CAAC;AACJ,CAAC;AAED,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}