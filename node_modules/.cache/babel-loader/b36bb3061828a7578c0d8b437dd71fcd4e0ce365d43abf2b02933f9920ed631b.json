{"ast":null,"code":"import { userAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/object-helpers\";\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst USERS = \"USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 22,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: true\n        })\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: false\n        })\n      };\n    case USERS:\n      return {\n        ...state,\n        users: [...action.users]\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    case SET_TOTAL_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalCount\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n    default:\n      return state;\n  }\n};\nexport const followSuccess = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unfollowSuccess = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: USERS,\n    users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport const setTotalUsersCount = totalCount => {\n  return {\n    type: SET_TOTAL_COUNT,\n    totalCount\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport const toggleFollowingProgress = (isFetching, userId) => {\n  return {\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n  };\n};\nexport const requestUsers = (currentPage, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  let data = await userAPI.getUsers(currentPage, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setCurrentPage(currentPage));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n};\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfollowSuccess);\n  };\n};\nexport default usersReducer;","map":{"version":3,"names":["userAPI","updateObjectInArray","FOLLOW","UNFOLLOW","USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","totalCount","filter","id","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","dispatch","data","getUsers","items","followUnfollowFlow","apiMethod","actionCreator","response","resultCode","follow","bind","unfollow"],"sources":["/Users/uvixmi/social-network/src/redux/users_reducer.js"],"sourcesContent":["import { userAPI } from \"../api/api\"\nimport { updateObjectInArray } from \"../utils/object-helpers\"\n\nconst FOLLOW = \"FOLLOW\"\nconst UNFOLLOW = \"UNFOLLOW\"\nconst USERS = \"USERS\"\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\"\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\n\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 22,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: true,\n        }),\n      }\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: false,\n        }),\n      }\n    case USERS:\n      return {\n        ...state,\n        users: [...action.users],\n      }\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      }\n    case SET_TOTAL_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.totalCount,\n      }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id != action.userId),\n      }\n    default:\n      return state\n  }\n}\nexport const followSuccess = (userId) => {\n  return {\n    type: FOLLOW,\n    userId,\n  }\n}\nexport const unfollowSuccess = (userId) => {\n  return {\n    type: UNFOLLOW,\n    userId,\n  }\n}\n\nexport const setUsers = (users) => {\n  return {\n    type: USERS,\n    users,\n  }\n}\nexport const setCurrentPage = (currentPage) => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage,\n  }\n}\nexport const setTotalUsersCount = (totalCount) => {\n  return {\n    type: SET_TOTAL_COUNT,\n    totalCount,\n  }\n}\nexport const toggleIsFetching = (isFetching) => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching,\n  }\n}\n\nexport const toggleFollowingProgress = (isFetching, userId) => {\n  return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId }\n}\n\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\n  dispatch(toggleIsFetching(true))\n  let data = await userAPI.getUsers(currentPage, pageSize)\n\n  dispatch(toggleIsFetching(false))\n  dispatch(setUsers(data.items))\n  dispatch(setCurrentPage(currentPage))\n  dispatch(setTotalUsersCount(data.totalCount))\n}\n\nconst followUnfollowFlow = async (\n  dispatch,\n  userId,\n  apiMethod,\n  actionCreator\n) => {\n  dispatch(toggleFollowingProgress(true, userId))\n  let response = await apiMethod(userId)\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId))\n  }\n  dispatch(toggleFollowingProgress(false, userId))\n}\n\nexport const follow = (userId) => {\n  return async (dispatch) => {\n    followUnfollowFlow(\n      dispatch,\n      userId,\n      userAPI.follow.bind(userAPI),\n      followSuccess\n    )\n  }\n}\n\nexport const unfollow = (userId) => {\n  return async (dispatch) => {\n    followUnfollowFlow(\n      dispatch,\n      userId,\n      userAPI.unfollow.bind(userAPI),\n      unfollowSuccess\n    )\n  }\n}\nexport default usersReducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}