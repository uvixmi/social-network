{"ast":null,"code":"var _jsxFileName = \"/Users/uvixmi/social-network/src/components/Users/Paginator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport s from \"./Paginator.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Paginator = _ref => {\n  _s();\n  let {\n    totalItemsCount,\n    pageSize,\n    currentPage,\n    portionSize = 10,\n    onPageChanged\n  } = _ref;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n  for (let i = 0; i < pagesCount; i++) {\n    pages.push(i);\n  }\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ddksad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.paginator,\n      children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setPortionNumber(portionNumber - 1);\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            onPageChanged(p);\n          },\n          children: p\n        }, p, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this);\n      }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setPortionNumber(portionNumber + 1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","useState","s","Paginator","totalItemsCount","pageSize","currentPage","portionSize","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","e"],"sources":["/Users/uvixmi/social-network/src/components/Users/Paginator.jsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport s from \"./Paginator.module.css\"\n\nconst Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  portionSize = 10,\n  onPageChanged,\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize)\n  let pages = []\n  for (let i = 0; i < pagesCount; i++) {\n    pages.push(i)\n  }\n  let portionCount = Math.ceil(pagesCount / portionSize)\n  let [portionNumber, setPortionNumber] = useState(1)\n\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n  let rightPortionPageNumber = portionNumber * portionSize\n\n  return (\n    <>\n      <div>ddksad</div>\n      <div className={s.paginator}>\n        {portionNumber > 1 && (\n          <button\n            onClick={() => {\n              setPortionNumber(portionNumber - 1)\n            }}\n          >\n            Prev\n          </button>\n        )}\n        {pages\n          .filter(\n            (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\n          )\n          .map((p) => {\n            return (\n              <span\n                //   className={cn(\n                //     { [s.selectedPage]: currentPage === p },\n                //     s.pageNumber\n                // )}\n                key={p}\n                onClick={(e) => {\n                  onPageChanged(p)\n                }}\n              >\n                {p}\n              </span>\n            )\n          })}\n        {portionCount > portionNumber && (\n          <button\n            onClick={() => {\n              setPortionNumber(portionNumber + 1)\n            }}\n          >\n            Next\n          </button>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Paginator\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,CAAC,MAAM,wBAAwB;AAAA;AAAA;AAEtC,MAAMC,SAAS,GAAG,QAMZ;EAAA;EAAA,IANa;IACjBC,eAAe;IACfC,QAAQ;IACRC,WAAW;IACXC,WAAW,GAAG,EAAE;IAChBC;EACF,CAAC;EACC,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACP,eAAe,GAAGC,QAAQ,CAAC;EACtD,IAAIO,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IACnCD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;EACf;EACA,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAI,CAACF,UAAU,GAAGF,WAAW,CAAC;EACtD,IAAI,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAEnD,IAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAC,IAAIT,WAAW,GAAG,CAAC;EACjE,IAAIY,sBAAsB,GAAGH,aAAa,GAAGT,WAAW;EAExD,oBACE;IAAA,wBACE;MAAA,UAAK;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eACjB;MAAK,SAAS,EAAEL,CAAC,CAACkB,SAAU;MAAA,WACzBJ,aAAa,GAAG,CAAC,iBAChB;QACE,OAAO,EAAE,MAAM;UACbC,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;QACrC,CAAE;QAAA,UACH;MAED;QAAA;QAAA;QAAA;MAAA,QACD,EACAJ,KAAK,CACHS,MAAM,CACJC,CAAC,IAAKA,CAAC,IAAIJ,qBAAqB,IAAII,CAAC,IAAIH,sBAAsB,CACjE,CACAI,GAAG,CAAED,CAAC,IAAK;QACV,oBACE;UAME,OAAO,EAAGE,CAAC,IAAK;YACdhB,aAAa,CAACc,CAAC,CAAC;UAClB,CAAE;UAAA,UAEDA;QAAC,GALGA,CAAC;UAAA;UAAA;UAAA;QAAA,QAMD;MAEX,CAAC,CAAC,EACHP,YAAY,GAAGC,aAAa,iBAC3B;QACE,OAAO,EAAE,MAAM;UACbC,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;QACrC,CAAE;QAAA,UACH;MAED;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAAA,gBACL;AAEP,CAAC;AAAA,GA/DKb,SAAS;AAAA,KAATA,SAAS;AAiEf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}