{"ast":null,"code":"var _jsxFileName = \"/Users/uvixmi/social-network/src/components/Users/Paginator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paginator = _ref => {\n  _s();\n  let {\n    totalItemsCount,\n    pageSize,\n    currentPage,\n    portionSize = 10,\n    onPageChanged\n  } = _ref;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n  for (let i = 0; i < pagesCount; i++) {\n    pages.push(i);\n  }\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: e => {\n          onPageChanged(p);\n        }\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","useState","cn","Paginator","totalItemsCount","pageSize","currentPage","portionSize","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","e"],"sources":["/Users/uvixmi/social-network/src/components/Users/Paginator.jsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport cn from \"classnames\"\n\nconst Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  portionSize = 10,\n  onPageChanged,\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize)\n  let pages = []\n  for (let i = 0; i < pagesCount; i++) {\n    pages.push(i)\n  }\n  let portionCount = Math.ceil(pagesCount / portionSize)\n  let [portionNumber, setPortionNumber] = useState(1)\n\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n  let rightPortionPageNumber = portionNumber * portionSize\n\n  return (\n    <div //className={s.paginator}\n    >\n      {portionNumber > 1 && (\n        <button\n          onClick={() => {\n            setPortionNumber(portionNumber - 1)\n          }}\n        >\n          Prev\n        </button>\n      )}\n      {pages\n        .filter(\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\n        )\n        .map((p) => {\n          return (\n            <span\n              //   className={cn(\n              //     { [s.selectedPage]: currentPage === p },\n              //     s.pageNumber\n              // )}\n              key={p}\n              onClick={(e) => {\n                onPageChanged(p)\n              }}\n            ></span>\n          )\n        })}\n      {portionCount > portionNumber && (\n        <button\n          onClick={() => {\n            setPortionNumber(portionNumber + 1)\n          }}\n        >\n          Next\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default Paginator\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,EAAE,MAAM,YAAY;AAAA;AAE3B,MAAMC,SAAS,GAAG,QAMZ;EAAA;EAAA,IANa;IACjBC,eAAe;IACfC,QAAQ;IACRC,WAAW;IACXC,WAAW,GAAG,EAAE;IAChBC;EACF,CAAC;EACC,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACP,eAAe,GAAGC,QAAQ,CAAC;EACtD,IAAIO,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IACnCD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;EACf;EACA,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAI,CAACF,UAAU,GAAGF,WAAW,CAAC;EACtD,IAAI,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAEnD,IAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAC,IAAIT,WAAW,GAAG,CAAC;EACjE,IAAIY,sBAAsB,GAAGH,aAAa,GAAGT,WAAW;EAExD,oBACE;IAAA,WAEGS,aAAa,GAAG,CAAC,iBAChB;MACE,OAAO,EAAE,MAAM;QACbC,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;MACrC,CAAE;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QACD,EACAJ,KAAK,CACHQ,MAAM,CACJC,CAAC,IAAKA,CAAC,IAAIH,qBAAqB,IAAIG,CAAC,IAAIF,sBAAsB,CACjE,CACAG,GAAG,CAAED,CAAC,IAAK;MACV,oBACE;QAME,OAAO,EAAGE,CAAC,IAAK;UACdf,aAAa,CAACa,CAAC,CAAC;QAClB;MAAE,GAHGA,CAAC;QAAA;QAAA;QAAA;MAAA,QAIA;IAEZ,CAAC,CAAC,EACHN,YAAY,GAAGC,aAAa,iBAC3B;MACE,OAAO,EAAE,MAAM;QACbC,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;MACrC,CAAE;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAA,GA3DKb,SAAS;AAAA,KAATA,SAAS;AA6Df,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}