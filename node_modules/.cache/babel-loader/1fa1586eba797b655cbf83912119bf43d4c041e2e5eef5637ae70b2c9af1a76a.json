{"ast":null,"code":"var _jsxFileName = \"/Users/uvixmi/social-network/src/components/Users/UsersContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching } from \"../../redux/users_reducer\";\nimport React from \"react\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { getUsers } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersAPIComponent extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onPageChanged = page => {\n      this.props.setCurrentPage(page);\n      this.props.toggleIsFetching(true);\n      getUsers(page, this.props.pageSize).then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n// let mapDispatchToProps = (dispatch) => {\n//   return {\n//     follow: (userId) => {\n//       dispatch(followAC(userId))\n//     },\n//     unfollow: (userId) => {\n//       dispatch(unFollowAC(userId))\n//     },\n//     setUsers: (users) => {\n//       dispatch(setUsersAC(users))\n//     },\n//     setCurrentPage: (currentPage) => {\n//       dispatch(setCurrentPageAC(currentPage))\n//     },\n//     setTotalUsersCount: (totalCount) => {\n//       dispatch(setTotalUsersCountAC(totalCount))\n//     },\n//     toggleIsFetching: (isFetching) => {\n//       dispatch(setIsFetchingAC(isFetching))\n//     },\n//   }\n// }\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"names":["connect","follow","setUsers","unfollow","setCurrentPage","setTotalUsersCount","toggleIsFetching","React","Users","Preloader","getUsers","UsersAPIComponent","Component","onPageChanged","page","props","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","isFetching","users","totalUsersCount","mapStateToProps","state","usersPage","UsersContainer"],"sources":["/Users/uvixmi/social-network/src/components/Users/UsersContainer.jsx"],"sourcesContent":["import { connect } from \"react-redux\"\nimport {\n  follow,\n  setUsers,\n  unfollow,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n} from \"../../redux/users_reducer\"\nimport React from \"react\"\nimport Users from \"./Users\"\nimport Preloader from \"../common/Preloader/Preloader\"\nimport { getUsers } from \"../../api/api\"\n\nclass UsersAPIComponent extends React.Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true)\n    getUsers(this.props.currentPage, this.props.pageSize).then((data) => {\n      this.props.toggleIsFetching(false)\n      this.props.setUsers(data.items)\n      this.props.setTotalUsersCount(data.totalCount)\n    })\n  }\n  onPageChanged = (page) => {\n    this.props.setCurrentPage(page)\n    this.props.toggleIsFetching(true)\n    getUsers(page, this.props.pageSize).then((data) => {\n      this.props.toggleIsFetching(false)\n      this.props.setUsers(data.items)\n    })\n  }\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <Preloader /> : null}\n        <Users\n          onPageChanged={this.onPageChanged}\n          users={this.props.users}\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n        />\n      </>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n  }\n}\n// let mapDispatchToProps = (dispatch) => {\n//   return {\n//     follow: (userId) => {\n//       dispatch(followAC(userId))\n//     },\n//     unfollow: (userId) => {\n//       dispatch(unFollowAC(userId))\n//     },\n//     setUsers: (users) => {\n//       dispatch(setUsersAC(users))\n//     },\n//     setCurrentPage: (currentPage) => {\n//       dispatch(setCurrentPageAC(currentPage))\n//     },\n//     setTotalUsersCount: (totalCount) => {\n//       dispatch(setTotalUsersCountAC(totalCount))\n//     },\n//     toggleIsFetching: (isFetching) => {\n//       dispatch(setIsFetchingAC(isFetching))\n//     },\n//   }\n// }\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n})(UsersAPIComponent)\n\nexport default UsersContainer\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}