{"ast":null,"code":"var _jsxFileName = \"/Users/uvixmi/social-network/src/components/Header/HeaderContainer.jsx\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { setAuthUserData } from \"../../redux/auth-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.resultCode === 0) this.props.setAuthUserData(response.data.data.login);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Header, {\n      ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({});\nexport default connect(mapStateToProps, {\n  setAuthUserData\n})(HeaderContainer);","map":{"version":3,"names":["React","Header","axios","connect","setAuthUserData","HeaderContainer","Component","componentDidMount","get","withCredentials","then","response","data","resultCode","props","login","render","mapStateToProps","state"],"sources":["/Users/uvixmi/social-network/src/components/Header/HeaderContainer.jsx"],"sourcesContent":["import React from \"react\"\nimport Header from \"./Header\"\nimport axios from \"axios\"\nimport { connect } from \"react-redux\"\nimport { setAuthUserData } from \"../../redux/auth-reducer\"\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    axios\n      .get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        if (response.data.resultCode === 0)\n          this.props.setAuthUserData(response.data.data.login)\n      })\n  }\n  render() {\n    return <Header {...this.props} />\n  }\n}\n\nconst mapStateToProps = (state) => ({})\nexport default connect(mapStateToProps, { setAuthUserData })(HeaderContainer)\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,eAAe,QAAQ,0BAA0B;AAAA;AAE1D,MAAMC,eAAe,SAASL,KAAK,CAACM,SAAS,CAAC;EAC5CC,iBAAiB,GAAG;IAClBL,KAAK,CACFM,GAAG,CAAE,sDAAqD,EAAE;MAC3DC,eAAe,EAAE;IACnB,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,UAAU,KAAK,CAAC,EAChC,IAAI,CAACC,KAAK,CAACV,eAAe,CAACO,QAAQ,CAACC,IAAI,CAACA,IAAI,CAACG,KAAK,CAAC;IACxD,CAAC,CAAC;EACN;EACAC,MAAM,GAAG;IACP,oBAAO,QAAC,MAAM;MAAA,GAAK,IAAI,CAACF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI;EACnC;AACF;AAEA,MAAMG,eAAe,GAAIC,KAAK,KAAM,CAAC,CAAC,CAAC;AACvC,eAAef,OAAO,CAACc,eAAe,EAAE;EAAEb;AAAgB,CAAC,CAAC,CAACC,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}