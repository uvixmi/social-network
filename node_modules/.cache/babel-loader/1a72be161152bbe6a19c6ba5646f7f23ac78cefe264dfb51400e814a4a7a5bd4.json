{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATE = \"SET_USER_DATE\";\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null\n};\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER_DATE:\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login) => {\n  return {\n    type: SET_USER_DATE,\n    data: {\n      userId,\n      email,\n      login\n    }\n  };\n};\nexport const getAuthUserData = () => {\n  return dispatch => {\n    authAPI.me().then(response => {\n      if (response.data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = response.data.data;\n        dispatch(setAuthUserData(id, email, login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","SET_USER_DATE","initialState","userId","email","login","authReducer","state","action","type","data","isAuth","setAuthUserData","getAuthUserData","dispatch","me","then","response","resultCode","id"],"sources":["/Users/uvixmi/social-network/src/redux/auth-reducer.js"],"sourcesContent":["import { authAPI } from \"../api/api\"\nconst SET_USER_DATE = \"SET_USER_DATE\"\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATE:\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true,\n      }\n    default:\n      return state\n  }\n}\n\nexport const setAuthUserData = (userId, email, login) => {\n  return {\n    type: SET_USER_DATE,\n    data: { userId, email, login },\n  }\n}\n\nexport const getAuthUserData = () => {\n  return (dispatch) => {\n    authAPI.me().then((response) => {\n      if (response.data.resultCode === 0) {\n        let { id, login, email } = response.data.data\n        dispatch(setAuthUserData(id, email, login))\n      }\n    })\n  }\n}\n\nexport default authReducer\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,MAAMC,aAAa,GAAG,eAAe;AAErC,IAAIC,YAAY,GAAG;EACjBC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,aAAa;MAChB,OAAO;QACL,GAAGM,KAAK;QACR,GAAGC,MAAM,CAACE,IAAI;QACdC,MAAM,EAAE;MACV,CAAC;IACH;MACE,OAAOJ,KAAK;EAAA;AAElB,CAAC;AAED,OAAO,MAAMK,eAAe,GAAG,CAACT,MAAM,EAAEC,KAAK,EAAEC,KAAK,KAAK;EACvD,OAAO;IACLI,IAAI,EAAER,aAAa;IACnBS,IAAI,EAAE;MAAEP,MAAM;MAAEC,KAAK;MAAEC;IAAM;EAC/B,CAAC;AACH,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAG,MAAM;EACnC,OAAQC,QAAQ,IAAK;IACnBd,OAAO,CAACe,EAAE,EAAE,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC9B,IAAIA,QAAQ,CAACP,IAAI,CAACQ,UAAU,KAAK,CAAC,EAAE;QAClC,IAAI;UAAEC,EAAE;UAAEd,KAAK;UAAED;QAAM,CAAC,GAAGa,QAAQ,CAACP,IAAI,CAACA,IAAI;QAC7CI,QAAQ,CAACF,eAAe,CAACO,EAAE,EAAEf,KAAK,EAAEC,KAAK,CAAC,CAAC;MAC7C;IACF,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}